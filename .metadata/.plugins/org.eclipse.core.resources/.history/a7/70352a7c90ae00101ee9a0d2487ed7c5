package com.example.springboot.webflux.app;


import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.mongodb.core.ReactiveMongoTemplate;

import com.example.springboot.webflux.app.models.dao.ProductoDao;
import com.example.springboot.webflux.app.models.documents.Categoria;
import com.example.springboot.webflux.app.models.documents.Producto;
import com.example.springboot.webflux.app.models.services.ProductoServiceImpl;

import reactor.core.publisher.Flux;

@SpringBootApplication
public class SpringBootWebfluxApplication implements CommandLineRunner {

	@Autowired
	private ProductoServiceImpl service;
	
	@Autowired
	private ReactiveMongoTemplate mongoTemplate;
	
	private static final Logger log = LoggerFactory.getLogger(SpringBootWebfluxApplication.class);
	
	public static void main(String[] args) {
		SpringApplication.run(SpringBootWebfluxApplication.class, args);
	}

	@Override
	public void run(String... args) throws Exception {
		mongoTemplate.dropCollection("productos").subscribe();
		mongoTemplate.dropCollection("categorias").subscribe();
		
		Categoria visual = new Categoria("visual");
		Categoria tactil = new Categoria("tactil");
		Categoria audio = new Categoria("audio");
		
		Flux.just(visual, tactil, audio)
		.flatMap(c -> {
			return service.saveCategoria(c);
		})		
		.doOnNext(c -> log.info("Insert: "+ c.getId()+" "+c.getNombre()))
		.thenMany(
				Flux.just(
						new Producto("Computador", 213.50, visual),
						new Producto("Celular", 12.50, tactil),
						new Producto("Audifonos", 13.20, audio),
						new Producto("Bafles", 83.20, audio),
						new Producto("Tablets", 312.20, tactil),
						new Producto("Monitor", 133.20, visual),
						new Producto("Mouses", 13.0, tactil),
						new Producto("Teclados", 53.20, tactil),
						new Producto("Computador portatil", 111.50, visual)
					)
				.flatMap(producto -> {
					producto.setCreateAt(new Date());
					return service.save(producto);
				})
				
		)
		.subscribe(producto -> log.info("Insert: "+ producto.getId()+" "+producto.getNombre()));
	}

}
